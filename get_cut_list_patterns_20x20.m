function cut_list = get_cut_list_patterns_20x20(name)
% SUMMARY:
%       This function generates and returns the cut_list for the pattern
%       specified in name. Possible patterns are:
%       "lines", "grid", "s", "hexagon", "octagon", "hilbert_curve",
%       "sierpinski_curve", "peano_curve", "gosper_curve", "swap",
%       "swap_diagonal", "zigzag", "z_curve", "e_curve".
%       Here there are cuts in every little square.
%       Attention: "gosper_curve_2" is only here for it to be looked at!
% INPUT:
%       name: string, specifying the name of the pattern
% OUTPUT:
%       cut_list: matrix with all the cuts. one cut is saved per row.

n = 20;
shorten_by = 0.2;

if name == "lines"
    orientation = ones(400,1);
    % orientation([1,2,21,19,20,40,361,381,382,380,399,400]) = 0;
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "grid"
    orientation = zeros(400,1);
    orientation(2:2:end) = 1;
    orientation(1:2:end) = 2;
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "s"
    orientation = zeros(400,1);
    orientation([2,4,6,8,10,12,14,16,18,20,42,44,46,48,50,52,54,56,58,60,82,84,86,88,90,92,94,96,98,100]) = 1;
    orientation([21,23,25,27,29,31,33,35,37,39,61,63,65,67,69,71,73,75,77,79]) = 2;
    % orientation([1,3,5,7,9,11,13,15,17,19,81,83,85,87,89,91,93,95,97,99]) = 4;
    % orientation([41,43,45,47,49,51,53,55,57,59]) = 3;
    orientation([2,4,6,8,10,12,14,16,18,20,42,44,46,48,50,52,54,56,58,60,82,84,86,88,90,92,94,96,98,100]+100) = 1;
    orientation([21,23,25,27,29,31,33,35,37,39,61,63,65,67,69,71,73,75,77,79]+100) = 2;
    % orientation([1,3,5,7,9,11,13,15,17,19,81,83,85,87,89,91,93,95,97,99]+100) = 4;
    % orientation([41,43,45,47,49,51,53,55,57,59]+100) = 3;
    orientation([2,4,6,8,10,12,14,16,18,20,42,44,46,48,50,52,54,56,58,60,82,84,86,88,90,92,94,96,98,100]+200) = 1;
    orientation([21,23,25,27,29,31,33,35,37,39,61,63,65,67,69,71,73,75,77,79]+200) = 2;
    % orientation([1,3,5,7,9,11,13,15,17,19,81,83,85,87,89,91,93,95,97,99]+200) = 4;
    % orientation([41,43,45,47,49,51,53,55,57,59]+200) = 3;
    orientation([2,4,6,8,10,12,14,16,18,20,42,44,46,48,50,52,54,56,58,60,82,84,86,88,90,92,94,96,98,100]+300) = 1;
    orientation([21,23,25,27,29,31,33,35,37,39,61,63,65,67,69,71,73,75,77,79]+300) = 2;
    % orientation([1,3,5,7,9,11,13,15,17,19,81,83,85,87,89,91,93,95,97,99]+300) = 4;
    % orientation([41,43,45,47,49,51,53,55,57,59]+300) = 3;
    % orientation([22,26,30,34,38,64,68,72,76,80,122,126,130,134,138,164,168,172,176,180,...
        % 222,226,230,234,238,264,268,272,276,280,322,326,330,334,338,364,368,372,376,380]) = 4;
    % orientation(orientation==0) = 3;
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "hexagon"
    degrees = [0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0;
        60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0;
        120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0;
        0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0;
        60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0;
        120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0;
        0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0;
        60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0;
        120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0;
        0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0;
        60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0;
        120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0;
        0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0;
        60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0;
        120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0;
        0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0;
        60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0;
        120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0;
        0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0;
        60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0,60,0,120,0]';
    cut_list = generate_squares_with_cuts_degrees(n,degrees,shorten_by);
elseif name == "octagon"
    orientation = [0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0;
        0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4;
        2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0;
        0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3;
        0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0;
        0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4;
        2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0;
        0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3;
        0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0;
        0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4;
        2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0;
        0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3;
        0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0;
        0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4;
        2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0;
        0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3;
        0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0;
        0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4;
        2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0;
        0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3,0,4,0,3;]';
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "hilbert_curve"
    orientation = [1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1;
        2,1,1,2,0,1,1,0,2,1,1,2,0,1,1,0,2,1,1,2;
        2,0,0,2,0,0,0,0,2,0,0,2,0,0,0,0,2,0,0,2;
        2,1,1,2,0,1,1,0,2,1,1,2,0,1,1,0,2,1,1,2;
        2,2,2,2,0,2,2,0,0,2,2,0,0,2,2,0,2,2,2,2;
        1,1,1,1,0,2,0,1,1,0,0,1,1,0,2,0,1,1,1,1;
        1,1,1,1,0,2,0,1,1,0,0,1,1,0,2,0,1,1,1,1;
        2,2,2,2,0,2,2,0,0,2,2,0,0,2,2,0,2,2,2,2;
        2,1,1,2,0,1,1,0,2,1,1,2,0,1,1,0,2,1,1,2;
        2,0,0,2,0,0,0,0,2,0,0,2,0,0,0,0,2,0,0,2;
        2,1,1,2,0,1,1,0,2,1,1,2,0,1,1,0,2,1,1,2;
        1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1;
        2,1,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,1,2;
        2,2,0,2,0,2,0,2,0,2,2,0,2,0,2,0,2,0,2,2;
        1,1,2,1,0,1,2,1,1,1,1,1,1,2,1,0,1,2,1,1;
        0,0,2,0,0,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0;
        1,1,2,1,0,1,2,1,1,1,1,1,1,2,1,0,1,2,1,1;
        2,2,0,2,0,2,0,2,0,2,2,0,2,0,2,0,2,0,2,2;
        2,1,1,1,0,1,1,1,0,2,2,0,1,1,1,0,1,1,1,2;
        1,2,2,1,1,1,2,2,1,2,2,1,2,2,1,1,1,2,2,1]';
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "sierpinski_curve"
    degrees = [45,135,0,45,135,45,135,0,45,135,45,135,0,45,135,45,135,0,45,135;
        135,0,180,0,45,135,0,180,0,45,135,0,180,0,45,135,0,180,0,45;
        0,90,0,90,0,0,90,0,90,0,0,90,0,90,0,0,90,0,90,0;
        45,0,180,0,135,45,0,180,0,135,45,0,180,0,135,45,0,180,0,135;
        135,45,0,135,0,0,45,0,135,45,135,45,0,135,0,0,45,0,135,45;
        45,135,0,45,0,0,135,0,45,135,45,135,0,45,0,0,135,0,45,135;
        135,0,180,0,45,135,0,180,0,45,135,0,180,0,45,135,0,180,0,45;
        0,90,0,90,0,0,90,0,90,0,0,90,0,90,0,0,90,0,90,0;
        45,0,180,0,135,45,0,180,0,135,45,0,180,0,135,45,0,180,0,135;
        135,45,0,135,45,135,45,0,135,0,0,45,0,135,45,135,45,0,135,45;
        45,135,0,45,135,45,135,0,45,0,0,135,0,45,135,45,135,0,45,135;
        135,0,180,0,45,135,0,180,0,45,135,0,180,0,45,135,0,180,0,45;
        0,90,0,90,0,0,90,0,90,0,0,90,0,90,0,0,90,0,90,0;
        45,0,180,0,135,45,0,180,0,135,45,0,180,0,135,45,0,180,0,135;
        135,45,0,135,0,0,45,0,135,45,135,45,0,135,0,0,45,0,135,45;
        45,135,0,45,0,0,135,0,45,135,45,135,0,45,0,0,135,0,45,135;
        135,0,180,0,45,135,0,180,0,45,135,0,180,0,45,135,0,180,0,45;
        0,90,0,90,0,0,90,0,90,0,0,90,0,90,0,0,90,0,90,0;
        45,0,180,0,135,45,0,180,0,135,45,0,180,0,135,45,0,180,0,135;
        135,45,0,135,45,135,45,0,135,45,135,45,0,135,45,135,45,0,135,45]';
    cut_list = generate_squares_with_cuts_degrees(n,degrees,shorten_by);
elseif name == "peano_curve"
    orientation = [2,0,2,1,2,0,2,1,2,0,2,1,2,0,2,1,2,0,2,1;
        2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0;
        2,1,2,0,2,0,2,0,2,1,2,0,2,1,2,0,2,0,2,0;
        0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,2,0;
        2,1,2,0,2,0,2,0,2,1,2,0,2,1,2,0,2,0,2,0;
        2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0;
        2,0,2,1,2,0,2,1,2,0,2,0,2,0,2,1,2,0,2,1;
        2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0;
        2,0,2,1,2,0,2,1,2,0,2,0,2,0,2,1,2,0,2,1;
        2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0;
        2,1,2,0,2,1,2,0,2,1,2,0,2,1,2,0,2,0,2,0;
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0;
        2,1,2,0,2,1,2,0,2,1,2,0,2,1,2,0,2,0,2,0;
        2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0;
        2,0,2,1,2,0,2,1,2,0,2,0,2,0,2,1,2,0,2,1;
        2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0;
        2,0,2,1,2,0,2,1,2,0,2,0,2,0,2,1,2,0,2,1;
        2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0;
        2,1,2,0,2,0,2,0,2,1,2,0,2,1,2,0,2,0,2,0;
        0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,2,0]';
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "gosper_curve_2"
    degrees = [0,60,120,120,0,0,60,120,120,0,0,120,0,0,0,0,60,60,60,0;
        60,0,60,60,60,120,120,0,180,0,60,180,0,60,180,120,120,180,0,60;
        120,0,180,60,0,60,60,60,120,0,180,180,180,0,0,180,60,120,0,180;
        0,180,120,120,0,180,60,0,60,0,60,180,120,0,60,180,180,60,60,120;
        60,120,0,120,180,120,120,0,180,180,0,60,180,0,60,180,120,60,0,60;
        120,0,180,180,0,180,120,120,0,0,0,180,180,180,0,60,120,120,0,180;
        0,180,120,0,60,180,180,60,0,60,120,0,0,0,0,120,0,180,0,0;
        0,0,0,120,0,0,0,0,60,0,60,0,60,180,120,0,120,0,60,120;
        0,60,180,180,0,0,0,0,120,0,180,180,0,60,180,0,60,0,120,0;
        0,60,0,0,60,180,120,0,0,120,0,0,60,0,0,60,0,60,120,120;
        0,180,180,180,0,0,0,120,0,0,180,0,180,180,180,0,60,0,60,60;
        0,60,120,0,0,0,60,120,120,0,0,120,0,0,0,60,0,60,60,0;
        60,0,60,60,180,120,120,0,180,0,60,180,60,180,120,120,0,180,0,60;
        120,0,180,0,60,180,60,0,60,120,120,180,0,0,180,60,0,60,120,120;
        0,180,120,0,180,180,0,60,0,60,0,60,180,120,0,0,60,0,60,60;
        0,60,180,0,60,180,120,120,0,180,180,0,60,180,0,0,120,0,180,0;
        0,180,180,180,0,60,180,60,0,60,120,0,180,180,60,180,120,180,0,60;
        0,0,0,0,60,0,60,0,60,0,60,0,0,0,60,120,0,120,120,120;
        0,60,120,0,180,180,0,0,120,0,180,60,180,120,120,0,180,180,0,180;
        60,0,60,0,0,60,120,0,0,180,120,0,60,180,60,0,0,60,120,0]';
    cut_list = generate_squares_with_cuts_degrees(n,degrees,shorten_by);
elseif name == "gosper_curve"
    Z = pattern_gosper_curve(4);
    px = real(Z) - min(real(Z));
    py = imag(Z) - min(imag(Z));
    px = 2.9*px/max(px) - 1;
    py = 3.1*py/max(py) - 0.98;
    cut_list = generate_cuts_from_points(px, py);
    cut_list = cut_list((abs(cut_list(:,1)) <= 0.5) & (abs(cut_list(:,2)) <= 0.5)...
        & (abs(cut_list(:,3)) <= 0.5) & (abs(cut_list(:,4)) <= 0.5), :) + 0.5;
    cut_list = cut_list + 0.005;
elseif name == "swap"
    orientation = ones(400,1);
    orientation([2,4,6,8,10,12,14,16,18,20,21,23,25,27,29,31,33,35,37,39,42,44,46,48,50,52,54,56,58,60,61,63,65,67,69,71,73,75,77,79, ...
        82,84,86,88,90,92,94,96,98,100,101,103,105,107,109,111,113,115,117,119,122,124,126,128,130,132,134,136,138,140,141,143,145,147, ...
        149,151,153,155,157,159,162,164,166,168,170,172,174,176,178,180,181,183,185,187,189,191,193,195,197,199,202,204,206,208,210,212, ...
        214,216,218,220,221,223,225,227,229,231,233,235,237,239,242,244,246,248,250,252,254,256,258,260,261,263,265,267,269,271,273,275,277, ...
        279,282,284,286,288,290,292,294,296,298,300,301,303,305,307,309,311,313,315,317,319,322,324,326,328,330,332,334,336,338,340,341,343, ...
        345,347,349,351,353,355,357,359,362,364,366,368,370,372,374,376,378,380,381,383,385,387,389,391,393,395,397,399]) = 2;
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "swap_diagonal"
    orientation = 4*ones(400,1);
    orientation([2,4,6,8,10,12,14,16,18,20,21,23,25,27,29,31,33,35,37,39,42,44,46,48,50,52,54,56,58,60,61,63,65,67,69,71,73,75,77,79, ...
        82,84,86,88,90,92,94,96,98,100,101,103,105,107,109,111,113,115,117,119,122,124,126,128,130,132,134,136,138,140,141,143,145,147, ...
        149,151,153,155,157,159,162,164,166,168,170,172,174,176,178,180,181,183,185,187,189,191,193,195,197,199,202,204,206,208,210,212, ...
        214,216,218,220,221,223,225,227,229,231,233,235,237,239,242,244,246,248,250,252,254,256,258,260,261,263,265,267,269,271,273,275,277, ...
        279,282,284,286,288,290,292,294,296,298,300,301,303,305,307,309,311,313,315,317,319,322,324,326,328,330,332,334,336,338,340,341,343, ...
        345,347,349,351,353,355,357,359,362,364,366,368,370,372,374,376,378,380,381,383,385,387,389,391,393,395,397,399]) = 3;
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "zigzag"
    orientation = 3*ones(400,1);
    orientation(2:2:end) = 4;
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "z_curve"
    orientation = [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0;
    1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2;
    1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0;
    1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2;
    1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0;
    1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2;
    1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0;
    1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2;
    1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0,4,4,4,0;
    1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0;
    0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2,0,4,0,2;]';
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
elseif name == "e_curve"
    orientation = [1,1,1,2,0,0,0,0,0,2,1,1,1,2,0,0,0,0,0,2;
        0,0,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,2;
        0,2,1,1,0,2,1,2,0,2,0,2,1,1,0,2,1,2,0,2;
        0,2,0,0,0,2,0,2,0,2,0,2,0,0,0,2,0,2,0,2;
        0,2,1,1,0,2,0,1,1,1,0,2,1,1,0,2,0,1,1,1;
        0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,2,0,0,0,0;
        2,1,1,2,0,2,1,2,0,2,1,1,1,2,0,2,1,2,0,2;
        2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,2;
        2,1,1,1,1,2,0,2,0,2,1,1,1,1,1,2,0,2,0,2;
        0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,2,0,2;
        0,2,1,2,0,2,1,2,0,2,1,1,1,2,0,2,1,2,0,2;
        0,2,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,2;
        0,2,0,2,0,2,1,2,0,2,0,2,1,1,0,2,1,2,0,2;
        0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,2,0,2,0,2;
        0,2,0,2,1,2,0,2,1,2,0,2,1,1,0,2,0,2,1,2;
        0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0;
        2,1,0,2,1,1,1,2,0,2,1,1,1,2,0,2,1,2,0,2;
        2,0,0,2,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,2;
        2,1,1,2,0,2,1,2,0,2,1,1,1,1,1,2,0,2,0,2;
        0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0]';
    cut_list = generate_squares_with_cuts(n,orientation,shorten_by);
end

end